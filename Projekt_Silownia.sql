--------------------------------------------------------
--  File created - niedziela-czerwca-02-2024   
--------------------------------------------------------
--------------------------------------------------------
--  DDL for Sequence KARNETY_ID
--------------------------------------------------------

   CREATE SEQUENCE  "SILOWNIA"."KARNETY_ID"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 24 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE  GLOBAL ;
--------------------------------------------------------
--  DDL for Sequence KLIENT_ID
--------------------------------------------------------

   CREATE SEQUENCE  "SILOWNIA"."KLIENT_ID"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 141 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE  GLOBAL ;
--------------------------------------------------------
--  DDL for Sequence OPINIE_ID
--------------------------------------------------------

   CREATE SEQUENCE  "SILOWNIA"."OPINIE_ID"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 61 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE  GLOBAL ;
--------------------------------------------------------
--  DDL for Sequence POMIAR_ID
--------------------------------------------------------

   CREATE SEQUENCE  "SILOWNIA"."POMIAR_ID"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 81 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE  GLOBAL ;
--------------------------------------------------------
--  DDL for Sequence PROWADZENIE_ID
--------------------------------------------------------

   CREATE SEQUENCE  "SILOWNIA"."PROWADZENIE_ID"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 101 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE  GLOBAL ;
--------------------------------------------------------
--  DDL for Sequence SILOWNIA_ID
--------------------------------------------------------

   CREATE SEQUENCE  "SILOWNIA"."SILOWNIA_ID"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 21 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE  GLOBAL ;
--------------------------------------------------------
--  DDL for Sequence TRENERZY_ID
--------------------------------------------------------

   CREATE SEQUENCE  "SILOWNIA"."TRENERZY_ID"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 61 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE  GLOBAL ;
--------------------------------------------------------
--  DDL for Sequence UCZESTNICTWO_ID
--------------------------------------------------------

   CREATE SEQUENCE  "SILOWNIA"."UCZESTNICTWO_ID"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 221 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE  GLOBAL ;
--------------------------------------------------------
--  DDL for Sequence ZAJECIA_ID
--------------------------------------------------------

   CREATE SEQUENCE  "SILOWNIA"."ZAJECIA_ID"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 41 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE  GLOBAL ;
--------------------------------------------------------
--  DDL for Table KARNETY
--------------------------------------------------------

  CREATE TABLE "SILOWNIA"."KARNETY" 
   (	"ID_KARNETU" NUMBER, 
	"NAZWA" VARCHAR2(50 BYTE) COLLATE "USING_NLS_COMP", 
	"OPIS" CLOB COLLATE "USING_NLS_COMP", 
	"CENA" NUMBER, 
	"DLUGOSC_TRWANIA" NUMBER, 
	"TYP" VARCHAR2(50 BYTE) COLLATE "USING_NLS_COMP"
   )  DEFAULT COLLATION "USING_NLS_COMP" SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" 
 LOB ("OPIS") STORE AS SECUREFILE (
  TABLESPACE "USERS" ENABLE STORAGE IN ROW 4000 CHUNK 8192
  NOCACHE LOGGING  NOCOMPRESS  KEEP_DUPLICATES 
  STORAGE(INITIAL 262144 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)) ;
--------------------------------------------------------
--  DDL for Table KLIENCI
--------------------------------------------------------

  CREATE TABLE "SILOWNIA"."KLIENCI" 
   (	"ID_KLIENTA" NUMBER, 
	"IMIE" VARCHAR2(50 BYTE) COLLATE "USING_NLS_COMP", 
	"NAZWISKO" VARCHAR2(50 BYTE) COLLATE "USING_NLS_COMP", 
	"ADRES" VARCHAR2(50 BYTE) COLLATE "USING_NLS_COMP", 
	"TELEFON" VARCHAR2(255 BYTE) COLLATE "USING_NLS_COMP", 
	"EMAIL" VARCHAR2(50 BYTE) COLLATE "USING_NLS_COMP", 
	"DATA_URODZENIA" DATE, 
	"DATA_DOLACZENIA" DATE, 
	"DATA_ODNOWIENIA_KARNETU" DATE, 
	"KARNET_ID" NUMBER, 
	"AKTYWNY" CHAR(1 BYTE) COLLATE "USING_NLS_COMP", 
	"HASLO" VARCHAR2(255 BYTE) COLLATE "USING_NLS_COMP"
   )  DEFAULT COLLATION "USING_NLS_COMP" SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table OPINIE
--------------------------------------------------------

  CREATE TABLE "SILOWNIA"."OPINIE" 
   (	"ID_OPINII" NUMBER, 
	"OCENA" NUMBER, 
	"KOMENTARZ" CLOB COLLATE "USING_NLS_COMP", 
	"ID_UCZESTNICTWO" NUMBER
   )  DEFAULT COLLATION "USING_NLS_COMP" SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" 
 LOB ("KOMENTARZ") STORE AS SECUREFILE (
  TABLESPACE "USERS" ENABLE STORAGE IN ROW 4000 CHUNK 8192
  NOCACHE LOGGING  NOCOMPRESS  KEEP_DUPLICATES 
  STORAGE(INITIAL 262144 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)) ;
--------------------------------------------------------
--  DDL for Table POMIARY_SKLADU_CIALA
--------------------------------------------------------

  CREATE TABLE "SILOWNIA"."POMIARY_SKLADU_CIALA" 
   (	"ID_POMIARU" NUMBER, 
	"DATA" DATE, 
	"WAGA" NUMBER, 
	"WZROST" NUMBER, 
	"MASA_MIESNIOWA" NUMBER, 
	"TKANKA_TLUSZCZOWA" NUMBER, 
	"ID_KLIENTA" NUMBER
   )  DEFAULT COLLATION "USING_NLS_COMP" SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table PROWADZENIE
--------------------------------------------------------

  CREATE TABLE "SILOWNIA"."PROWADZENIE" 
   (	"ID_PROWADZENIA" NUMBER, 
	"ID_TRENERA" NUMBER, 
	"ID_ZAJEC" NUMBER, 
	"ID_SILOWNI" NUMBER, 
	"DATA_I_GODZINA" TIMESTAMP (6)
   )  DEFAULT COLLATION "USING_NLS_COMP" SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table SILOWNIE
--------------------------------------------------------

  CREATE TABLE "SILOWNIA"."SILOWNIE" 
   (	"ID_SILOWNI" NUMBER, 
	"NAZWA" VARCHAR2(50 BYTE) COLLATE "USING_NLS_COMP", 
	"ADRES" VARCHAR2(50 BYTE) COLLATE "USING_NLS_COMP", 
	"TELEFON" VARCHAR2(9 BYTE) COLLATE "USING_NLS_COMP", 
	"EMAIL" VARCHAR2(50 BYTE) COLLATE "USING_NLS_COMP"
   )  DEFAULT COLLATION "USING_NLS_COMP" SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table TRENERZY
--------------------------------------------------------

  CREATE TABLE "SILOWNIA"."TRENERZY" 
   (	"ID_TRENERA" NUMBER, 
	"IMIE" VARCHAR2(50 BYTE) COLLATE "USING_NLS_COMP", 
	"NAZWISKO" VARCHAR2(50 BYTE) COLLATE "USING_NLS_COMP", 
	"SPECJALIZACJA" VARCHAR2(255 BYTE) COLLATE "USING_NLS_COMP", 
	"DOSWIADCZENIE" NUMBER, 
	"TELEFON" VARCHAR2(9 BYTE) COLLATE "USING_NLS_COMP", 
	"EMAIL" VARCHAR2(50 BYTE) COLLATE "USING_NLS_COMP", 
	"HASLO" VARCHAR2(255 BYTE) COLLATE "USING_NLS_COMP"
   )  DEFAULT COLLATION "USING_NLS_COMP" SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table UCZESTNICTWO
--------------------------------------------------------

  CREATE TABLE "SILOWNIA"."UCZESTNICTWO" 
   (	"ID_UCZESTNICTWO" NUMBER, 
	"ID_KLIENTA" NUMBER, 
	"ID_PROWADZENIA" NUMBER
   )  DEFAULT COLLATION "USING_NLS_COMP" SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table ZAJECIA
--------------------------------------------------------

  CREATE TABLE "SILOWNIA"."ZAJECIA" 
   (	"ID_ZAJEC" NUMBER, 
	"NAZWA" VARCHAR2(100 BYTE) COLLATE "USING_NLS_COMP", 
	"OPIS" CLOB COLLATE "USING_NLS_COMP", 
	"DLUGOSC_TRWANIA" NUMBER
   )  DEFAULT COLLATION "USING_NLS_COMP" SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" 
 LOB ("OPIS") STORE AS SECUREFILE (
  TABLESPACE "USERS" ENABLE STORAGE IN ROW 4000 CHUNK 8192
  NOCACHE LOGGING  NOCOMPRESS  KEEP_DUPLICATES 
  STORAGE(INITIAL 262144 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)) ;
REM INSERTING into SILOWNIA.KARNETY
SET DEFINE OFF;
Insert into SILOWNIA.KARNETY (ID_KARNETU,NAZWA,CENA,DLUGOSC_TRWANIA,TYP) values ('1','Karnet roczny','1000','365','roczny');
Insert into SILOWNIA.KARNETY (ID_KARNETU,NAZWA,CENA,DLUGOSC_TRWANIA,TYP) values ('2','Karnet polroczny','600','182','polroczny');
Insert into SILOWNIA.KARNETY (ID_KARNETU,NAZWA,CENA,DLUGOSC_TRWANIA,TYP) values ('3','Karnet miesieczny','150','30','miesieczny');
Insert into SILOWNIA.KARNETY (ID_KARNETU,NAZWA,CENA,DLUGOSC_TRWANIA,TYP) values ('4','Karnet 2+2','300','120','Cztero-miesieczny');
REM INSERTING into SILOWNIA.KLIENCI
SET DEFINE OFF;
Insert into SILOWNIA.KLIENCI (ID_KLIENTA,IMIE,NAZWISKO,ADRES,TELEFON,EMAIL,DATA_URODZENIA,DATA_DOLACZENIA,DATA_ODNOWIENIA_KARNETU,KARNET_ID,AKTYWNY,HASLO) values ('1','Jan','Kowalski','Boguchwala ul. Kwiatowa 10','123456789','jan.kowalski@email.com',to_date('90/01/01','RR/MM/DD'),to_date('23/01/01','RR/MM/DD'),to_date('24/06/01','RR/MM/DD'),'1','T','1234');
Insert into SILOWNIA.KLIENCI (ID_KLIENTA,IMIE,NAZWISKO,ADRES,TELEFON,EMAIL,DATA_URODZENIA,DATA_DOLACZENIA,DATA_ODNOWIENIA_KARNETU,KARNET_ID,AKTYWNY,HASLO) values ('2','Anna','Nowak','Rzeszow ul. Lesna 5','987654321','anna.nowak@email.com',to_date('85/05/15','RR/MM/DD'),to_date('23/03/10','RR/MM/DD'),to_date('24/04/10','RR/MM/DD'),'2','T','1234');
Insert into SILOWNIA.KLIENCI (ID_KLIENTA,IMIE,NAZWISKO,ADRES,TELEFON,EMAIL,DATA_URODZENIA,DATA_DOLACZENIA,DATA_ODNOWIENIA_KARNETU,KARNET_ID,AKTYWNY,HASLO) values ('3','Piotr','Wisniewski','Boguchwala ul. Polna 8','456123789','piotr.wisniewski@email.com',to_date('82/11/20','RR/MM/DD'),to_date('23/02/26','RR/MM/DD'),to_date('24/03/28','RR/MM/DD'),'2','T','1234');
Insert into SILOWNIA.KLIENCI (ID_KLIENTA,IMIE,NAZWISKO,ADRES,TELEFON,EMAIL,DATA_URODZENIA,DATA_DOLACZENIA,DATA_ODNOWIENIA_KARNETU,KARNET_ID,AKTYWNY,HASLO) values ('4','Katarzyna','Duda','Rzeszow ul. Sloneczna 3','369258147','katarzyna.duda@email.com',to_date('95/07/08','RR/MM/DD'),to_date('23/04/05','RR/MM/DD'),to_date('23/06/05','RR/MM/DD'),'1','T','1234');
Insert into SILOWNIA.KLIENCI (ID_KLIENTA,IMIE,NAZWISKO,ADRES,TELEFON,EMAIL,DATA_URODZENIA,DATA_DOLACZENIA,DATA_ODNOWIENIA_KARNETU,KARNET_ID,AKTYWNY,HASLO) values ('5','Andrzej','Wojcik','Boguchwala ul. Zielona 12','741852963','andrzej.wojcik@email.com',to_date('88/03/25','RR/MM/DD'),to_date('23/06/20','RR/MM/DD'),to_date('24/01/20','RR/MM/DD'),'2','T','1234');
Insert into SILOWNIA.KLIENCI (ID_KLIENTA,IMIE,NAZWISKO,ADRES,TELEFON,EMAIL,DATA_URODZENIA,DATA_DOLACZENIA,DATA_ODNOWIENIA_KARNETU,KARNET_ID,AKTYWNY,HASLO) values ('6','Aleksandra','Kaminska','Rzeszow ul. Brzozowa 7','852963741','aleksandra.kaminska@email.com',to_date('93/09/12','RR/MM/DD'),to_date('23/05/18','RR/MM/DD'),to_date('24/02/18','RR/MM/DD'),'2','T','1234');
Insert into SILOWNIA.KLIENCI (ID_KLIENTA,IMIE,NAZWISKO,ADRES,TELEFON,EMAIL,DATA_URODZENIA,DATA_DOLACZENIA,DATA_ODNOWIENIA_KARNETU,KARNET_ID,AKTYWNY,HASLO) values ('7','Marek','Lewandowski','Boguchwala ul. Morska 15','369147258','marek.lewandowski@email.com',to_date('76/12/30','RR/MM/DD'),to_date('22/07/10','RR/MM/DD'),to_date('23/09/10','RR/MM/DD'),'2','N','1234');
Insert into SILOWNIA.KLIENCI (ID_KLIENTA,IMIE,NAZWISKO,ADRES,TELEFON,EMAIL,DATA_URODZENIA,DATA_DOLACZENIA,DATA_ODNOWIENIA_KARNETU,KARNET_ID,AKTYWNY,HASLO) values ('8','Magdalena','Zajac','Rzeszow ul. Lipowa 4','159263874','magdalena.zajac@email.com',to_date('91/08/18','RR/MM/DD'),to_date('23/08/02','RR/MM/DD'),to_date('24/04/22','RR/MM/DD'),'3','T','1234');
Insert into SILOWNIA.KLIENCI (ID_KLIENTA,IMIE,NAZWISKO,ADRES,TELEFON,EMAIL,DATA_URODZENIA,DATA_DOLACZENIA,DATA_ODNOWIENIA_KARNETU,KARNET_ID,AKTYWNY,HASLO) values ('9','Krzysztof','Adamczyk','Boguchwala ul. Debowa 6','147852369','krzysztof.adamczyk@email.com',to_date('80/04/03','RR/MM/DD'),to_date('23/09/22','RR/MM/DD'),to_date('24/06/01','RR/MM/DD'),'3','T','1234');
Insert into SILOWNIA.KLIENCI (ID_KLIENTA,IMIE,NAZWISKO,ADRES,TELEFON,EMAIL,DATA_URODZENIA,DATA_DOLACZENIA,DATA_ODNOWIENIA_KARNETU,KARNET_ID,AKTYWNY,HASLO) values ('10','Ewa','Witkowska','Rzeszow ul. Zurawia 9','258369147','ewa.witkowska@email.com',to_date('97/01/28','RR/MM/DD'),to_date('23/10/15','RR/MM/DD'),to_date('24/04/15','RR/MM/DD'),'1','T','1234');
Insert into SILOWNIA.KLIENCI (ID_KLIENTA,IMIE,NAZWISKO,ADRES,TELEFON,EMAIL,DATA_URODZENIA,DATA_DOLACZENIA,DATA_ODNOWIENIA_KARNETU,KARNET_ID,AKTYWNY,HASLO) values ('42','test2','test2','Rzeszow ul. Rejtana 1','123412312','t@t.com',to_date('24/05/27','RR/MM/DD'),to_date('24/06/01','RR/MM/DD'),to_date('24/06/01','RR/MM/DD'),'4','T','1234');
Insert into SILOWNIA.KLIENCI (ID_KLIENTA,IMIE,NAZWISKO,ADRES,TELEFON,EMAIL,DATA_URODZENIA,DATA_DOLACZENIA,DATA_ODNOWIENIA_KARNETU,KARNET_ID,AKTYWNY,HASLO) values ('62','Patryk','Bak','Rzeszow, ul. Polna 81','123456987','patryk.test@email.com',to_date('04/10/05','RR/MM/DD'),to_date('24/06/01','RR/MM/DD'),to_date('24/06/01','RR/MM/DD'),'1','T','1234');
REM INSERTING into SILOWNIA.OPINIE
SET DEFINE OFF;
Insert into SILOWNIA.OPINIE (ID_OPINII,OCENA,ID_UCZESTNICTWO) values ('2','3','2');
Insert into SILOWNIA.OPINIE (ID_OPINII,OCENA,ID_UCZESTNICTWO) values ('41','3','2');
Insert into SILOWNIA.OPINIE (ID_OPINII,OCENA,ID_UCZESTNICTWO) values ('42','4','6');
Insert into SILOWNIA.OPINIE (ID_OPINII,OCENA,ID_UCZESTNICTWO) values ('43','2','6');
Insert into SILOWNIA.OPINIE (ID_OPINII,OCENA,ID_UCZESTNICTWO) values ('44','3','6');
Insert into SILOWNIA.OPINIE (ID_OPINII,OCENA,ID_UCZESTNICTWO) values ('45','5','64');
REM INSERTING into SILOWNIA.POMIARY_SKLADU_CIALA
SET DEFINE OFF;
Insert into SILOWNIA.POMIARY_SKLADU_CIALA (ID_POMIARU,DATA,WAGA,WZROST,MASA_MIESNIOWA,TKANKA_TLUSZCZOWA,ID_KLIENTA) values ('1',to_date('23/09/20','RR/MM/DD'),'70','180','65','15','7');
Insert into SILOWNIA.POMIARY_SKLADU_CIALA (ID_POMIARU,DATA,WAGA,WZROST,MASA_MIESNIOWA,TKANKA_TLUSZCZOWA,ID_KLIENTA) values ('2',to_date('23/12/20','RR/MM/DD'),'72','180','66','14','7');
Insert into SILOWNIA.POMIARY_SKLADU_CIALA (ID_POMIARU,DATA,WAGA,WZROST,MASA_MIESNIOWA,TKANKA_TLUSZCZOWA,ID_KLIENTA) values ('3',to_date('24/04/01','RR/MM/DD'),'75','182','68','16','5');
Insert into SILOWNIA.POMIARY_SKLADU_CIALA (ID_POMIARU,DATA,WAGA,WZROST,MASA_MIESNIOWA,TKANKA_TLUSZCZOWA,ID_KLIENTA) values ('4',to_date('24/04/07','RR/MM/DD'),'78','182','70','15','5');
Insert into SILOWNIA.POMIARY_SKLADU_CIALA (ID_POMIARU,DATA,WAGA,WZROST,MASA_MIESNIOWA,TKANKA_TLUSZCZOWA,ID_KLIENTA) values ('5',to_date('24/05/10','RR/MM/DD'),'68','175','64','13','3');
Insert into SILOWNIA.POMIARY_SKLADU_CIALA (ID_POMIARU,DATA,WAGA,WZROST,MASA_MIESNIOWA,TKANKA_TLUSZCZOWA,ID_KLIENTA) values ('21',to_date('24/05/25','RR/MM/DD'),'55','175','55','12','1');
Insert into SILOWNIA.POMIARY_SKLADU_CIALA (ID_POMIARU,DATA,WAGA,WZROST,MASA_MIESNIOWA,TKANKA_TLUSZCZOWA,ID_KLIENTA) values ('61',to_date('24/06/01','RR/MM/DD'),'68,5','180','55','10','42');
Insert into SILOWNIA.POMIARY_SKLADU_CIALA (ID_POMIARU,DATA,WAGA,WZROST,MASA_MIESNIOWA,TKANKA_TLUSZCZOWA,ID_KLIENTA) values ('41',to_date('24/05/28','RR/MM/DD'),'80','180','68','16','7');
REM INSERTING into SILOWNIA.PROWADZENIE
SET DEFINE OFF;
Insert into SILOWNIA.PROWADZENIE (ID_PROWADZENIA,ID_TRENERA,ID_ZAJEC,ID_SILOWNI,DATA_I_GODZINA) values ('11','5','9','1',to_timestamp('24/05/02 16:00:00,000000000','RR/MM/DD HH24:MI:SSXFF'));
Insert into SILOWNIA.PROWADZENIE (ID_PROWADZENIA,ID_TRENERA,ID_ZAJEC,ID_SILOWNI,DATA_I_GODZINA) values ('12','2','9','1',to_timestamp('24/05/04 17:00:00,000000000','RR/MM/DD HH24:MI:SSXFF'));
Insert into SILOWNIA.PROWADZENIE (ID_PROWADZENIA,ID_TRENERA,ID_ZAJEC,ID_SILOWNI,DATA_I_GODZINA) values ('42','1','1','1',to_timestamp('24/05/27 11:11:00,000000000','RR/MM/DD HH24:MI:SSXFF'));
Insert into SILOWNIA.PROWADZENIE (ID_PROWADZENIA,ID_TRENERA,ID_ZAJEC,ID_SILOWNI,DATA_I_GODZINA) values ('1','1','1','1',to_timestamp('24/05/15 09:00:00,000000000','RR/MM/DD HH24:MI:SSXFF'));
Insert into SILOWNIA.PROWADZENIE (ID_PROWADZENIA,ID_TRENERA,ID_ZAJEC,ID_SILOWNI,DATA_I_GODZINA) values ('2','1','2','1',to_timestamp('24/05/17 10:30:00,000000000','RR/MM/DD HH24:MI:SSXFF'));
Insert into SILOWNIA.PROWADZENIE (ID_PROWADZENIA,ID_TRENERA,ID_ZAJEC,ID_SILOWNI,DATA_I_GODZINA) values ('3','2','3','2',to_timestamp('24/05/20 11:00:00,000000000','RR/MM/DD HH24:MI:SSXFF'));
Insert into SILOWNIA.PROWADZENIE (ID_PROWADZENIA,ID_TRENERA,ID_ZAJEC,ID_SILOWNI,DATA_I_GODZINA) values ('4','2','4','2',to_timestamp('24/05/22 09:30:00,000000000','RR/MM/DD HH24:MI:SSXFF'));
Insert into SILOWNIA.PROWADZENIE (ID_PROWADZENIA,ID_TRENERA,ID_ZAJEC,ID_SILOWNI,DATA_I_GODZINA) values ('5','3','5','1',to_timestamp('24/05/25 12:00:00,000000000','RR/MM/DD HH24:MI:SSXFF'));
Insert into SILOWNIA.PROWADZENIE (ID_PROWADZENIA,ID_TRENERA,ID_ZAJEC,ID_SILOWNI,DATA_I_GODZINA) values ('6','3','6','2',to_timestamp('24/05/27 14:00:00,000000000','RR/MM/DD HH24:MI:SSXFF'));
Insert into SILOWNIA.PROWADZENIE (ID_PROWADZENIA,ID_TRENERA,ID_ZAJEC,ID_SILOWNI,DATA_I_GODZINA) values ('7','4','7','3',to_timestamp('24/06/01 17:30:00,000000000','RR/MM/DD HH24:MI:SSXFF'));
Insert into SILOWNIA.PROWADZENIE (ID_PROWADZENIA,ID_TRENERA,ID_ZAJEC,ID_SILOWNI,DATA_I_GODZINA) values ('8','4','8','3',to_timestamp('24/06/03 18:00:00,000000000','RR/MM/DD HH24:MI:SSXFF'));
Insert into SILOWNIA.PROWADZENIE (ID_PROWADZENIA,ID_TRENERA,ID_ZAJEC,ID_SILOWNI,DATA_I_GODZINA) values ('9','5','9','1',to_timestamp('24/06/05 16:00:00,000000000','RR/MM/DD HH24:MI:SSXFF'));
Insert into SILOWNIA.PROWADZENIE (ID_PROWADZENIA,ID_TRENERA,ID_ZAJEC,ID_SILOWNI,DATA_I_GODZINA) values ('10','5','10','2',to_timestamp('24/06/07 17:00:00,000000000','RR/MM/DD HH24:MI:SSXFF'));
Insert into SILOWNIA.PROWADZENIE (ID_PROWADZENIA,ID_TRENERA,ID_ZAJEC,ID_SILOWNI,DATA_I_GODZINA) values ('81','1','9','2',to_timestamp('24/06/02 12:00:00,000000000','RR/MM/DD HH24:MI:SSXFF'));
Insert into SILOWNIA.PROWADZENIE (ID_PROWADZENIA,ID_TRENERA,ID_ZAJEC,ID_SILOWNI,DATA_I_GODZINA) values ('61','1','8','3',to_timestamp('24/06/07 14:00:00,000000000','RR/MM/DD HH24:MI:SSXFF'));
Insert into SILOWNIA.PROWADZENIE (ID_PROWADZENIA,ID_TRENERA,ID_ZAJEC,ID_SILOWNI,DATA_I_GODZINA) values ('101','1','3','1',to_timestamp('24/06/06 17:40:00,000000000','RR/MM/DD HH24:MI:SSXFF'));
REM INSERTING into SILOWNIA.SILOWNIE
SET DEFINE OFF;
Insert into SILOWNIA.SILOWNIE (ID_SILOWNI,NAZWA,ADRES,TELEFON,EMAIL) values ('1','Powerhouse Gym','Boguchwala ul. Sportowa 1','123456789','powerhouse@example.com');
Insert into SILOWNIA.SILOWNIE (ID_SILOWNI,NAZWA,ADRES,TELEFON,EMAIL) values ('2','Fitness Center "Power"','Rzeszow ul. Aktywna 2','987654321','fitflex@example.com');
Insert into SILOWNIA.SILOWNIE (ID_SILOWNI,NAZWA,ADRES,TELEFON,EMAIL) values ('3','Fitness Center "Sparta"','Rzeszow ul. Energiczna 3','555666777','sparta@example.com');
REM INSERTING into SILOWNIA.TRENERZY
SET DEFINE OFF;
Insert into SILOWNIA.TRENERZY (ID_TRENERA,IMIE,NAZWISKO,SPECJALIZACJA,DOSWIADCZENIE,TELEFON,EMAIL,HASLO) values ('1','Adam','Kowalski','Trening silowy','5','123456789','adam.kowalski@example.com','12345');
Insert into SILOWNIA.TRENERZY (ID_TRENERA,IMIE,NAZWISKO,SPECJALIZACJA,DOSWIADCZENIE,TELEFON,EMAIL,HASLO) values ('2','Anna','Nowak','Zdrowie i odzywianie','8','987654321','anna.nowak@example.com','12345');
Insert into SILOWNIA.TRENERZY (ID_TRENERA,IMIE,NAZWISKO,SPECJALIZACJA,DOSWIADCZENIE,TELEFON,EMAIL,HASLO) values ('3','Piotr','Wisniewski','Trening funkcjonalny','6','555666777','piotr.wisniewski@example.com','12345');
Insert into SILOWNIA.TRENERZY (ID_TRENERA,IMIE,NAZWISKO,SPECJALIZACJA,DOSWIADCZENIE,TELEFON,EMAIL,HASLO) values ('4','Karolina','Lewandowska','Trening interwalowy','4','999888777','karolina.lewandowska@example.com','12345');
Insert into SILOWNIA.TRENERZY (ID_TRENERA,IMIE,NAZWISKO,SPECJALIZACJA,DOSWIADCZENIE,TELEFON,EMAIL,HASLO) values ('5','Michal','Wojcik','Trening kardio','7','444333222','michal.wojcik@example.com','12345');
Insert into SILOWNIA.TRENERZY (ID_TRENERA,IMIE,NAZWISKO,SPECJALIZACJA,DOSWIADCZENIE,TELEFON,EMAIL,HASLO) values ('41','test','test','Sporty walki','3','120000998','test@email.com','12345');
Insert into SILOWNIA.TRENERZY (ID_TRENERA,IMIE,NAZWISKO,SPECJALIZACJA,DOSWIADCZENIE,TELEFON,EMAIL,HASLO) values ('21','Jakub','Olej','Trening wytrzymalosciowy','1','556677889','jakub.olej@example.com','12345');
REM INSERTING into SILOWNIA.UCZESTNICTWO
SET DEFINE OFF;
Insert into SILOWNIA.UCZESTNICTWO (ID_UCZESTNICTWO,ID_KLIENTA,ID_PROWADZENIA) values ('64','5','5');
Insert into SILOWNIA.UCZESTNICTWO (ID_UCZESTNICTWO,ID_KLIENTA,ID_PROWADZENIA) values ('1','8','1');
Insert into SILOWNIA.UCZESTNICTWO (ID_UCZESTNICTWO,ID_KLIENTA,ID_PROWADZENIA) values ('2','2','11');
Insert into SILOWNIA.UCZESTNICTWO (ID_UCZESTNICTWO,ID_KLIENTA,ID_PROWADZENIA) values ('81','4','7');
Insert into SILOWNIA.UCZESTNICTWO (ID_UCZESTNICTWO,ID_KLIENTA,ID_PROWADZENIA) values ('4','4','7');
Insert into SILOWNIA.UCZESTNICTWO (ID_UCZESTNICTWO,ID_KLIENTA,ID_PROWADZENIA) values ('161','5','7');
Insert into SILOWNIA.UCZESTNICTWO (ID_UCZESTNICTWO,ID_KLIENTA,ID_PROWADZENIA) values ('6','4','2');
Insert into SILOWNIA.UCZESTNICTWO (ID_UCZESTNICTWO,ID_KLIENTA,ID_PROWADZENIA) values ('7','7','7');
Insert into SILOWNIA.UCZESTNICTWO (ID_UCZESTNICTWO,ID_KLIENTA,ID_PROWADZENIA) values ('8','6','7');
Insert into SILOWNIA.UCZESTNICTWO (ID_UCZESTNICTWO,ID_KLIENTA,ID_PROWADZENIA) values ('9','3','8');
Insert into SILOWNIA.UCZESTNICTWO (ID_UCZESTNICTWO,ID_KLIENTA,ID_PROWADZENIA) values ('181','9','61');
Insert into SILOWNIA.UCZESTNICTWO (ID_UCZESTNICTWO,ID_KLIENTA,ID_PROWADZENIA) values ('182','9','81');
Insert into SILOWNIA.UCZESTNICTWO (ID_UCZESTNICTWO,ID_KLIENTA,ID_PROWADZENIA) values ('183','9','8');
Insert into SILOWNIA.UCZESTNICTWO (ID_UCZESTNICTWO,ID_KLIENTA,ID_PROWADZENIA) values ('184','9','9');
Insert into SILOWNIA.UCZESTNICTWO (ID_UCZESTNICTWO,ID_KLIENTA,ID_PROWADZENIA) values ('83','7','7');
Insert into SILOWNIA.UCZESTNICTWO (ID_UCZESTNICTWO,ID_KLIENTA,ID_PROWADZENIA) values ('84','6','7');
Insert into SILOWNIA.UCZESTNICTWO (ID_UCZESTNICTWO,ID_KLIENTA,ID_PROWADZENIA) values ('85','3','8');
Insert into SILOWNIA.UCZESTNICTWO (ID_UCZESTNICTWO,ID_KLIENTA,ID_PROWADZENIA) values ('185','9','10');
Insert into SILOWNIA.UCZESTNICTWO (ID_UCZESTNICTWO,ID_KLIENTA,ID_PROWADZENIA) values ('142','42','7');
Insert into SILOWNIA.UCZESTNICTWO (ID_UCZESTNICTWO,ID_KLIENTA,ID_PROWADZENIA) values ('143','42','8');
Insert into SILOWNIA.UCZESTNICTWO (ID_UCZESTNICTWO,ID_KLIENTA,ID_PROWADZENIA) values ('144','42','9');
Insert into SILOWNIA.UCZESTNICTWO (ID_UCZESTNICTWO,ID_KLIENTA,ID_PROWADZENIA) values ('145','42','10');
Insert into SILOWNIA.UCZESTNICTWO (ID_UCZESTNICTWO,ID_KLIENTA,ID_PROWADZENIA) values ('163','1','7');
Insert into SILOWNIA.UCZESTNICTWO (ID_UCZESTNICTWO,ID_KLIENTA,ID_PROWADZENIA) values ('201','62','101');
REM INSERTING into SILOWNIA.ZAJECIA
SET DEFINE OFF;
Insert into SILOWNIA.ZAJECIA (ID_ZAJEC,NAZWA,DLUGOSC_TRWANIA) values ('1','Zumba Fitness','60');
Insert into SILOWNIA.ZAJECIA (ID_ZAJEC,NAZWA,DLUGOSC_TRWANIA) values ('2','CrossFit','90');
Insert into SILOWNIA.ZAJECIA (ID_ZAJEC,NAZWA,DLUGOSC_TRWANIA) values ('3','Pilates','60');
Insert into SILOWNIA.ZAJECIA (ID_ZAJEC,NAZWA,DLUGOSC_TRWANIA) values ('4','Spinning','45');
Insert into SILOWNIA.ZAJECIA (ID_ZAJEC,NAZWA,DLUGOSC_TRWANIA) values ('5','Yoga','75');
Insert into SILOWNIA.ZAJECIA (ID_ZAJEC,NAZWA,DLUGOSC_TRWANIA) values ('6','Boks','60');
Insert into SILOWNIA.ZAJECIA (ID_ZAJEC,NAZWA,DLUGOSC_TRWANIA) values ('7','Trening interwalowy HIIT','30');
Insert into SILOWNIA.ZAJECIA (ID_ZAJEC,NAZWA,DLUGOSC_TRWANIA) values ('8','Stretching','45');
Insert into SILOWNIA.ZAJECIA (ID_ZAJEC,NAZWA,DLUGOSC_TRWANIA) values ('9','Trening silowy dla kobiet','60');
Insert into SILOWNIA.ZAJECIA (ID_ZAJEC,NAZWA,DLUGOSC_TRWANIA) values ('10','Trening funkcjonalny','60');
Insert into SILOWNIA.ZAJECIA (ID_ZAJEC,NAZWA,DLUGOSC_TRWANIA) values ('21','Bieganie','90');
--------------------------------------------------------
--  DDL for Package KLIENT_FUNCTIONS
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE PACKAGE "SILOWNIA"."KLIENT_FUNCTIONS" AS
  TYPE typ_zajecia IS RECORD (
    nazwa_zajec VARCHAR2(100),
    trener VARCHAR2(100),
    silownia VARCHAR2(100),
    data_i_godzina DATE,
    id_prowadzenia NUMBER
  );
  TYPE ClientData IS RECORD (
    id_klienta NUMBER,
    imie VARCHAR2(50),
    nazwisko VARCHAR2(50),
    telefon VARCHAR2(15),
    email VARCHAR2(50),
    data_urodzenia DATE,
    adres VARCHAR2(100)
  );
  PROCEDURE KUP_KARNET(p_klient_id IN NUMBER, p_karnet_id IN NUMBER);
  PROCEDURE OCENY_SILOWNI(p_cursor OUT SYS_REFCURSOR);
  PROCEDURE OCENY_TRENEROW(p_cursor OUT SYS_REFCURSOR);
  PROCEDURE OCENY_ZAJEC(p_cursor OUT SYS_REFCURSOR);
  PROCEDURE POBIERZ_ZAJECIA(p_cursor OUT SYS_REFCURSOR);
  PROCEDURE POBIERZ_ZAJECIA_KLIENTA(p_cursor OUT SYS_REFCURSOR, p_login IN VARCHAR2);
  PROCEDURE POMIARYSKLADUCIALA(p_login IN VARCHAR2, p_pomiary OUT SYS_REFCURSOR);
  PROCEDURE SPRAWDZ_ZAPIS(p_login IN VARCHAR2, p_id_prowadzenia IN NUMBER, p_result OUT VARCHAR2);
  PROCEDURE WYPISZ_Z_ZAJEC(p_id_klienta IN NUMBER, p_id_prowadzenia IN NUMBER);
  PROCEDURE ZAPISZ_SIE(p_id_klienta IN UCZESTNICTWO.ID_KLIENTA%TYPE, p_id_prowadzenia IN UCZESTNICTWO.ID_PROWADZENIA%TYPE);
  PROCEDURE UpdateClientStatus(p_login IN VARCHAR2);
  PROCEDURE client_update_data(p_client_data IN ClientData);
  PROCEDURE RegisterClient(
    p_imie IN VARCHAR2,
    p_nazwisko IN VARCHAR2,
    p_adres IN VARCHAR2,
    p_telefon IN VARCHAR2,
    p_email IN VARCHAR2,
    p_data_urodzenia IN DATE,
    p_haslo IN VARCHAR2
  );
  FUNCTION get_client_data(p_email IN VARCHAR2) RETURN SYS_REFCURSOR;
  FUNCTION GETDLUGOSCTRWANIA(p_login IN VARCHAR2) RETURN NUMBER;
  FUNCTION SPRAWDZ_AKTYWNOSC_KARNETU(p_data_odnowienia IN DATE, p_dlugosc_trwania IN NUMBER) RETURN CHAR;
  FUNCTION VALIDATELOGIN(p_login IN VARCHAR2, p_password IN VARCHAR2) RETURN NUMBER;
  FUNCTION CheckMembershipStatus(p_login IN VARCHAR2) RETURN CHAR;
  FUNCTION IS_EMAIL_UNIQUE_CLIENT (p_email VARCHAR2, p_id_klienta NUMBER) RETURN BOOLEAN;
END KLIENT_FUNCTIONS;

/
--------------------------------------------------------
--  DDL for Package TRAINER_FUNCTIONS
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE PACKAGE "SILOWNIA"."TRAINER_FUNCTIONS" AS
  TYPE TrainerData IS RECORD (
    id_trenera NUMBER,
    imie VARCHAR2(50),
    nazwisko VARCHAR2(50),
    specjalizacja VARCHAR2(15),
    doswiadczenie VARCHAR2(50),
    telefon VARCHAR2(15),
    email VARCHAR2(50)
  );

  PROCEDURE "DODAJ_ANALIZE_SKLADU_CIALA" (
    p_id_klienta IN NUMBER,
    p_data IN DATE,
    p_waga IN NUMBER,
    p_wzrost IN NUMBER,
    p_masa_miesniowa IN NUMBER,
    p_tkanka_tluszczowa IN NUMBER
);

PROCEDURE DODAJ_KARNET (
    p_nazwa_karnetu IN VARCHAR2,
    p_opis IN CLOB,
    p_cena IN NUMBER,
    p_dlugosc_trwania IN NUMBER,
    p_typ IN VARCHAR2
);

PROCEDURE "DODAJ_SPOTKANIE" (
    p_id_trenera IN NUMBER,
    p_id_zajec IN NUMBER,
    p_id_silowni IN NUMBER,
    p_data_i_godzina IN TIMESTAMP
);

PROCEDURE "DODAJ_ZAJECIA" (
    p_nazwa_zajec IN VARCHAR2,
    p_opis IN CLOB,
    p_dlugosc_trwania IN NUMBER
);

PROCEDURE EDYTUJ_KARNET(
    id_karnetu IN NUMBER,
    nazwa_karnetu IN VARCHAR2,
    opis IN CLOB,
    cena IN NUMBER,
    dlugosc_trwania IN NUMBER,
    typ IN VARCHAR2
);

PROCEDURE "POBIERZ_DANE_TRENERA" (
    p_cursor OUT SYS_REFCURSOR,
    p_login IN VARCHAR2
);

PROCEDURE "POBIERZ_KLIENTOW" (
    klienci OUT SYS_REFCURSOR
);

PROCEDURE "POBIERZ_OPINIE_TRENERA" (
    p_cursor OUT SYS_REFCURSOR,
    p_id_trenera IN NUMBER
);

PROCEDURE "POBIERZ_ZAJECIA_TRENERA" (
    p_cursor OUT SYS_REFCURSOR,
    p_id_trenera IN NUMBER
);

PROCEDURE "REGISTERTRENER" (
    p_imie IN VARCHAR2,
    p_nazwisko IN VARCHAR2,
    p_specjalizacja IN VARCHAR2,
    p_doswiadczenie IN NUMBER,
    p_telefon IN VARCHAR2,
    p_email IN VARCHAR2,
    p_haslo IN VARCHAR2
);

PROCEDURE trainer_update_data(p_trainer_data IN TrainerData);

FUNCTION "VALIDATETRAINERLOGIN" (p_login IN VARCHAR2, p_password IN VARCHAR2)
RETURN NUMBER;

FUNCTION IS_EMAIL_UNIQUE_TRAINER(p_email VARCHAR2, p_id_trenera NUMBER) RETURN BOOLEAN;

END TRAINER_FUNCTIONS;

/
--------------------------------------------------------
--  DDL for Package Body KLIENT_FUNCTIONS
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE PACKAGE BODY "SILOWNIA"."KLIENT_FUNCTIONS" AS
    PROCEDURE KUP_KARNET (
        p_klient_id IN NUMBER,
        p_karnet_id IN NUMBER
    ) IS
        v_dlugosc_trwania NUMBER;
    BEGIN
        SELECT dlugosc_trwania
        INTO v_dlugosc_trwania
        FROM karnety
        WHERE id_karnetu = p_karnet_id;

        UPDATE klienci
        SET karnet_id = p_karnet_id,
            aktywny = 'T',
            data_odnowienia_karnetu = SYSDATE
        WHERE id_klienta = p_klient_id;

        COMMIT;
    END KUP_KARNET;

    PROCEDURE OCENY_SILOWNI (
        p_cursor OUT SYS_REFCURSOR
    ) IS
    BEGIN
        OPEN p_cursor FOR
        SELECT s.NAZWA as "NAZWA_SILOWNI",
               AVG(o.OCENA) as "SREDNIA_OCEN",
               COUNT(o.ID_OPINII) as "LICZBA_OCEN"
        FROM OPINIE o
        JOIN UCZESTNICTWO u ON o.ID_UCZESTNICTWO = u.ID_UCZESTNICTWO
        JOIN PROWADZENIE p ON u.ID_PROWADZENIA = p.ID_PROWADZENIA
        JOIN SILOWNIE s ON p.ID_SILOWNI = s.ID_SILOWNI
        GROUP BY s.NAZWA;
    END OCENY_SILOWNI;

    PROCEDURE OCENY_TRENEROW (
        p_cursor OUT SYS_REFCURSOR
    ) IS
    BEGIN
        OPEN p_cursor FOR
        SELECT t.imie || ' ' || t.nazwisko AS trener,
               AVG(o.ocena) AS srednia_ocen,
               COUNT(o.id_opinii) AS liczba_ocen
        FROM OPINIE o
        JOIN UCZESTNICTWO u ON o.ID_UCZESTNICTWO = u.ID_UCZESTNICTWO
        JOIN PROWADZENIE p ON u.ID_PROWADZENIA = p.ID_PROWADZENIA
        JOIN TRENERZY t ON p.ID_TRENERA = t.ID_TRENERA
        GROUP BY t.imie, t.nazwisko;
    END OCENY_TRENEROW;

    PROCEDURE OCENY_ZAJEC (
        p_cursor OUT SYS_REFCURSOR
    ) IS
    BEGIN
        OPEN p_cursor FOR
            SELECT z.NAZWA AS ZAJECIA,
                AVG(o.OCENA) AS SREDNIA_OCEN,
                COUNT(o.ID_OPINII) AS LICZBA_OCEN
            FROM OPINIE o
            JOIN UCZESTNICTWO u ON o.ID_UCZESTNICTWO = u.ID_UCZESTNICTWO
            JOIN PROWADZENIE p ON u.ID_PROWADZENIA = p.ID_PROWADZENIA
            JOIN ZAJECIA z ON p.ID_ZAJEC = z.ID_ZAJEC
            GROUP BY z.NAZWA;
    END OCENY_ZAJEC;

    PROCEDURE POBIERZ_ZAJECIA (
        p_cursor OUT SYS_REFCURSOR
    ) IS
    BEGIN
        OPEN p_cursor FOR
            SELECT p.ID_PROWADZENIA, z.NAZWA AS NAZWA_ZAJEC,
                   t.IMIE || ' ' || t.NAZWISKO AS TRENER,
                   s.NAZWA AS SILOWNIA,
                   p.DATA_I_GODZINA
              FROM PROWADZENIE p
              JOIN TRENERZY t ON p.ID_TRENERA = t.ID_TRENERA
              JOIN ZAJECIA z ON p.ID_ZAJEC = z.ID_ZAJEC
              JOIN SILOWNIE s ON p.ID_SILOWNI = s.ID_SILOWNI
              WHERE p.DATA_I_GODZINA > SYSDATE;
    END POBIERZ_ZAJECIA;

    PROCEDURE POBIERZ_ZAJECIA_KLIENTA (
        p_cursor OUT SYS_REFCURSOR,
        p_login IN VARCHAR2
    ) IS
        typ_zajecia_zmienna typ_zajecia;
    BEGIN
        OPEN p_cursor FOR
            SELECT z.NAZWA AS NAZWA_ZAJEC,
                   t.IMIE || ' ' || t.NAZWISKO AS TRENER,
                   s.NAZWA AS SILOWNIA,
                   p.DATA_I_GODZINA,
                   p.ID_PROWADZENIA
              FROM KLIENCI k
            JOIN UCZESTNICTWO u ON k.ID_KLIENTA = u.ID_KLIENTA
            JOIN PROWADZENIE p ON u.ID_PROWADZENIA = p.ID_PROWADZENIA
            JOIN TRENERZY t ON p.ID_TRENERA = t.ID_TRENERA
            JOIN ZAJECIA z ON p.ID_ZAJEC = z.ID_ZAJEC
            JOIN SILOWNIE s ON p.ID_SILOWNI = s.ID_SILOWNI
            WHERE k.EMAIL = p_login;
    END POBIERZ_ZAJECIA_KLIENTA;

    PROCEDURE POMIARYSKLADUCIALA (
        p_login IN VARCHAR2,
        p_pomiary OUT SYS_REFCURSOR
    ) IS
    BEGIN
        OPEN p_pomiary FOR
            SELECT data, waga, wzrost, masa_miesniowa, tkanka_tluszczowa
            FROM pomiary_skladu_ciala psc
            JOIN klienci k ON psc.id_klienta = k.id_klienta
            WHERE k.email = p_login
            ORDER BY data DESC;
    END POMIARYSKLADUCIALA;

    PROCEDURE SPRAWDZ_ZAPIS (
        p_login IN VARCHAR2,
        p_id_prowadzenia IN NUMBER,
        p_result OUT VARCHAR2
    ) IS
        v_count NUMBER;
    BEGIN
        SELECT COUNT(*)
        INTO v_count
        FROM SILOWNIA.UCZESTNICTWO
        WHERE ID_KLIENTA = (
            SELECT ID_KLIENTA
            FROM SILOWNIA.KLIENCI
            WHERE EMAIL = p_login
        )
        AND ID_PROWADZENIA = p_id_prowadzenia;

        IF v_count > 0 THEN
            p_result := 'TRUE';
        ELSE
            p_result := 'FALSE';
        END IF;
    END SPRAWDZ_ZAPIS;

    PROCEDURE WYPISZ_Z_ZAJEC (
        p_id_klienta IN NUMBER,
        p_id_prowadzenia IN NUMBER
    ) IS
    BEGIN
        DELETE FROM OPINIE
        WHERE ID_UCZESTNICTWO IN (
            SELECT ID_UCZESTNICTWO 
            FROM UCZESTNICTWO 
            WHERE ID_KLIENTA = p_id_klienta 
            AND ID_PROWADZENIA = p_id_prowadzenia
        );

        DELETE FROM UCZESTNICTWO
        WHERE ID_KLIENTA = p_id_klienta
        AND ID_PROWADZENIA = p_id_prowadzenia;

        COMMIT;
    END WYPISZ_Z_ZAJEC;

    PROCEDURE ZAPISZ_SIE (
        p_id_klienta IN UCZESTNICTWO.ID_KLIENTA%TYPE,
        p_id_prowadzenia IN UCZESTNICTWO.ID_PROWADZENIA%TYPE
    ) IS 
    BEGIN 
        INSERT INTO UCZESTNICTWO (ID_UCZESTNICTWO, ID_KLIENTA, ID_PROWADZENIA) 
        VALUES (UCZESTNICTWO_ID.NEXTVAL, p_id_klienta, p_id_prowadzenia);
    EXCEPTION
        WHEN OTHERS THEN
            RAISE_APPLICATION_ERROR(-20001, 'Zajecia juz sie odbyly.');
    END ZAPISZ_SIE;

    PROCEDURE UpdateClientStatus(p_login IN VARCHAR2) IS
        v_data_odnowienia DATE;
        v_dlugosc_trwania NUMBER;
        v_aktywny CHAR(1);
    BEGIN
        SELECT k.DATA_ODNOWIENIA_KARNETU, kt.DLUGOSC_TRWANIA
        INTO v_data_odnowienia, v_dlugosc_trwania
        FROM Klienci k
        JOIN Karnety kt ON k.KARNET_ID = kt.ID_KARNETU
        WHERE k.Email = p_login;

        v_aktywny := KLIENT_FUNCTIONS.SPRAWDZ_AKTYWNOSC_KARNETU(v_data_odnowienia, v_dlugosc_trwania);

        UPDATE Klienci
        SET aktywny = v_aktywny
        WHERE Email = p_login;

        COMMIT;
    END UpdateClientStatus;

    PROCEDURE client_update_data(p_client_data IN ClientData) IS
    BEGIN
        UPDATE klienci
        SET imie = p_client_data.imie,
            nazwisko = p_client_data.nazwisko,
            telefon = p_client_data.telefon,
            data_urodzenia = p_client_data.data_urodzenia,
            adres = p_client_data.adres,
            email = p_client_data.email
        WHERE id_klienta = p_client_data.id_klienta;
    END client_update_data;

    PROCEDURE RegisterClient(
        p_imie IN VARCHAR2,
        p_nazwisko IN VARCHAR2,
        p_adres IN VARCHAR2,
        p_telefon IN VARCHAR2,
        p_email IN VARCHAR2,
        p_data_urodzenia IN DATE,
        p_haslo IN VARCHAR2
    ) IS
    BEGIN
        INSERT INTO KLIENCI (IMIE, NAZWISKO, ADRES, TELEFON, EMAIL, DATA_URODZENIA, HASLO)
        VALUES (p_imie, p_nazwisko, p_adres, p_telefon, p_email, p_data_urodzenia, p_haslo);
    END RegisterClient;

    FUNCTION get_client_data(p_email IN VARCHAR2)
    RETURN SYS_REFCURSOR IS
        client_cursor SYS_REFCURSOR;
    BEGIN
        OPEN client_cursor FOR
            SELECT * FROM KLIENCI WHERE EMAIL = p_email;
        RETURN client_cursor;
    END get_client_data;

    FUNCTION GETDLUGOSCTRWANIA(p_login IN VARCHAR2)
    RETURN NUMBER IS
        v_dlugosc NUMBER;
    BEGIN
        SELECT k.dlugosc_trwania INTO v_dlugosc
        FROM klienci c
        JOIN karnety k ON c.karnet_id = k.id_karnetu
        WHERE c.email = p_login;

        RETURN v_dlugosc;
    END GETDLUGOSCTRWANIA;

    FUNCTION SPRAWDZ_AKTYWNOSC_KARNETU (
        p_data_odnowienia IN DATE,
        p_dlugosc_trwania IN NUMBER
    )
    RETURN CHAR IS
        czy_aktywny CHAR(1);
    BEGIN
        IF p_data_odnowienia + p_dlugosc_trwania >= SYSDATE THEN
            czy_aktywny := 'T';
        ELSE
            czy_aktywny := 'N';
        END IF;

        RETURN czy_aktywny;
    END SPRAWDZ_AKTYWNOSC_KARNETU;

    FUNCTION VALIDATELOGIN(
        p_login IN VARCHAR2,
        p_password IN VARCHAR2
    )
    RETURN NUMBER IS
        v_count NUMBER;
    BEGIN
        SELECT COUNT(*)
        INTO v_count
        FROM Klienci
        WHERE Email = p_login
        AND Haslo = p_password;

        IF v_count = 1 THEN
            RETURN 1;
        ELSE
            RETURN 0;
        END IF;
    END VALIDATELOGIN;

    FUNCTION CheckMembershipStatus(
        p_login IN VARCHAR2
    )
    RETURN CHAR IS
        v_data_odnowienia DATE;
        v_dlugosc_trwania NUMBER;
        v_aktywny CHAR(1);
    BEGIN
        SELECT k.DATA_ODNOWIENIA_KARNETU, kt.DLUGOSC_TRWANIA
        INTO v_data_odnowienia, v_dlugosc_trwania
        FROM Klienci k
        JOIN Karnety kt ON k.KARNET_ID = kt.ID_KARNETU
        WHERE k.Email = p_login;

        v_aktywny := SPRAWDZ_AKTYWNOSC_KARNETU(v_data_odnowienia, v_dlugosc_trwania);

        RETURN v_aktywny;
    END CheckMembershipStatus;

    FUNCTION IS_EMAIL_UNIQUE_CLIENT(p_email VARCHAR2, p_id_klienta NUMBER) RETURN BOOLEAN IS
    email_count INTEGER;
    PRAGMA AUTONOMOUS_TRANSACTION;
    BEGIN
        SELECT COUNT(*)
        INTO email_count
        FROM KLIENCI
        WHERE EMAIL = p_email
          AND ID_KLIENTA != p_id_klienta;

        IF email_count > 0 THEN
            RETURN FALSE;
        ELSE
            RETURN TRUE;
        END IF;
    END IS_EMAIL_UNIQUE_CLIENT;

END KLIENT_FUNCTIONS;

/
--------------------------------------------------------
--  DDL for Package Body TRAINER_FUNCTIONS
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE PACKAGE BODY "SILOWNIA"."TRAINER_FUNCTIONS" AS
PROCEDURE "DODAJ_ANALIZE_SKLADU_CIALA" (
    p_id_klienta IN NUMBER,
    p_data IN DATE,
    p_waga IN NUMBER,
    p_wzrost IN NUMBER,
    p_masa_miesniowa IN NUMBER,
    p_tkanka_tluszczowa IN NUMBER
) IS
BEGIN
    INSERT INTO POMIARY_SKLADU_CIALA (
        ID_POMIARU,
        DATA,
        WAGA,
        WZROST,
        MASA_MIESNIOWA,
        TKANKA_TLUSZCZOWA,
        ID_KLIENTA
    ) VALUES (
        POMIAR_ID.NEXTVAL,
        p_data,
        p_waga,
        p_wzrost,
        p_masa_miesniowa,
        p_tkanka_tluszczowa,
        p_id_klienta
    );
    COMMIT;
END DODAJ_ANALIZE_SKLADU_CIALA;

PROCEDURE DODAJ_KARNET (
    p_nazwa_karnetu IN VARCHAR2,
    p_opis IN CLOB,
    p_cena IN NUMBER,
    p_dlugosc_trwania IN NUMBER,
    p_typ IN VARCHAR2
) AS
BEGIN
    INSERT INTO SILOWNIA.KARNETY (ID_KARNETU, NAZWA, OPIS, CENA, DLUGOSC_TRWANIA, TYP)
    VALUES (KARNETY_ID.NEXTVAL, p_nazwa_karnetu, p_opis, p_cena, p_dlugosc_trwania, p_typ);
    COMMIT;
END DODAJ_KARNET;

PROCEDURE "DODAJ_SPOTKANIE" (
    p_id_trenera IN NUMBER,
    p_id_zajec IN NUMBER,
    p_id_silowni IN NUMBER,
    p_data_i_godzina IN TIMESTAMP
) AS
BEGIN
    INSERT INTO PROWADZENIE (ID_PROWADZENIA,ID_TRENERA, ID_ZAJEC, ID_SILOWNI, DATA_I_GODZINA)
    VALUES (PROWADZENIE_ID.NEXTVAL, p_id_trenera, p_id_zajec, p_id_silowni, p_data_i_godzina);

    COMMIT;
EXCEPTION
    WHEN OTHERS THEN
        ROLLBACK;
        RAISE;
END DODAJ_SPOTKANIE;

PROCEDURE "DODAJ_ZAJECIA" (
    p_nazwa_zajec IN VARCHAR2,
    p_opis IN CLOB,
    p_dlugosc_trwania IN NUMBER
) IS
BEGIN
    INSERT INTO ZAJECIA (ID_ZAJEC, NAZWA, OPIS, DLUGOSC_TRWANIA)
    VALUES (ZAJECIA_ID.nextval, p_nazwa_zajec, p_opis, p_dlugosc_trwania);
END DODAJ_ZAJECIA;

PROCEDURE EDYTUJ_KARNET(
    id_karnetu IN NUMBER,
    nazwa_karnetu IN VARCHAR2,
    opis IN CLOB,
    cena IN NUMBER,
    dlugosc_trwania IN NUMBER,
    typ IN VARCHAR2
)
IS
BEGIN
    UPDATE KARNETY
    SET NAZWA = nazwa_karnetu,
        OPIS = opis,
        CENA = cena,
        DLUGOSC_TRWANIA = dlugosc_trwania,
        TYP = typ
    WHERE ID_KARNETU = id_karnetu;
    COMMIT;
END EDYTUJ_KARNET;

PROCEDURE "POBIERZ_DANE_TRENERA" (
    p_cursor OUT SYS_REFCURSOR,
    p_login IN VARCHAR2
)
IS
BEGIN
    OPEN p_cursor FOR
        SELECT ID_TRENERA, IMIE, NAZWISKO, SPECJALIZACJA, DOSWIADCZENIE, TELEFON, EMAIL
        FROM TRENERZY
        WHERE EMAIL = p_login;
END POBIERZ_DANE_TRENERA;

PROCEDURE "POBIERZ_KLIENTOW" (
    klienci OUT SYS_REFCURSOR
)
IS
BEGIN
    OPEN klienci FOR
    SELECT id_klienta, imie, nazwisko, telefon FROM klienci;
END pobierz_klientow;

PROCEDURE "POBIERZ_OPINIE_TRENERA" (
    p_cursor OUT SYS_REFCURSOR,
    p_id_trenera IN NUMBER
)
IS
BEGIN
    OPEN p_cursor FOR
        SELECT o.OCENA, o.KOMENTARZ, z.NAZWA AS NAZWA_ZAJEC, p.DATA_I_GODZINA
        FROM OPINIE o
        JOIN UCZESTNICTWO u ON o.ID_UCZESTNICTWO = u.ID_UCZESTNICTWO
        JOIN PROWADZENIE p ON u.ID_PROWADZENIA = p.ID_PROWADZENIA
        JOIN ZAJECIA z ON p.ID_ZAJEC = z.ID_ZAJEC
        WHERE p.ID_TRENERA = p_id_trenera;
END POBIERZ_OPINIE_TRENERA;

PROCEDURE "POBIERZ_ZAJECIA_TRENERA" (
    p_cursor OUT SYS_REFCURSOR,
    p_id_trenera IN NUMBER
)
IS
BEGIN
    OPEN p_cursor FOR
        SELECT z.NAZWA AS NAZWA_ZAJEC, s.NAZWA AS SILOWNIA, p.DATA_I_GODZINA
        FROM PROWADZENIE p
        JOIN ZAJECIA z ON p.ID_ZAJEC = z.ID_ZAJEC
        JOIN SILOWNIE s ON p.ID_SILOWNI = s.ID_SILOWNI
        WHERE p.ID_TRENERA = p_id_trenera;
END POBIERZ_ZAJECIA_TRENERA;

PROCEDURE "REGISTERTRENER" (
    p_imie IN VARCHAR2,
    p_nazwisko IN VARCHAR2,
    p_specjalizacja IN VARCHAR2,
    p_doswiadczenie IN NUMBER,
    p_telefon IN VARCHAR2,
    p_email IN VARCHAR2,
    p_haslo IN VARCHAR2
) AS
BEGIN
    INSERT INTO TRENERZY (ID_TRENERA, IMIE, NAZWISKO, SPECJALIZACJA, DOSWIADCZENIE, TELEFON, EMAIL, HASLO)
    VALUES (TRENERZY_ID.NEXTVAL, p_imie, p_nazwisko, p_specjalizacja, p_doswiadczenie, p_telefon, p_email, p_haslo);
    COMMIT;
END REGISTERTRENER;

PROCEDURE trainer_update_data(p_trainer_data IN TrainerData) IS
BEGIN
    UPDATE trenerzy
    SET imie = p_trainer_data.imie,
        nazwisko = p_trainer_data.nazwisko,
        specjalizacja = p_trainer_data.specjalizacja,
        doswiadczenie = p_trainer_data.doswiadczenie,
        telefon = p_trainer_data.telefon,
        email = p_trainer_data.email
    WHERE id_trenera = p_trainer_data.id_trenera;
END trainer_update_data;

FUNCTION "VALIDATETRAINERLOGIN" (p_login IN VARCHAR2, p_password IN VARCHAR2)
RETURN NUMBER IS
    v_count NUMBER;
BEGIN
    SELECT COUNT(*)
    INTO v_count
    FROM Trenerzy
    WHERE Email = p_login
    AND Haslo = p_password;

    RETURN v_count;
END ValidateTrainerLogin;

FUNCTION IS_EMAIL_UNIQUE_TRAINER(p_email VARCHAR2, p_id_trenera NUMBER) RETURN BOOLEAN IS
    email_count INTEGER;
    PRAGMA AUTONOMOUS_TRANSACTION;
    BEGIN
        SELECT COUNT(*)
        INTO email_count
        FROM TRENERZY
        WHERE EMAIL = p_email
          AND ID_TRENERA != p_id_trenera;

        IF email_count > 0 THEN
            RETURN FALSE;
        ELSE
            RETURN TRUE;
        END IF;
    END IS_EMAIL_UNIQUE_TRAINER;

END TRAINER_FUNCTIONS;

/
--------------------------------------------------------
--  DDL for Trigger REGISTERCLIENTTRIGGER
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE TRIGGER "SILOWNIA"."REGISTERCLIENTTRIGGER" 
BEFORE INSERT ON KLIENCI
FOR EACH ROW
BEGIN
    :NEW.ID_KLIENTA := KLIENT_ID.nextval;
    :NEW.DATA_DOLACZENIA := SYSDATE;
    :NEW.AKTYWNY := 'N';
END;
/
ALTER TRIGGER "SILOWNIA"."REGISTERCLIENTTRIGGER" ENABLE;
--------------------------------------------------------
--  DDL for Trigger VALIDATE_UNIQUE_EMAIL_CLIENT
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE TRIGGER "SILOWNIA"."VALIDATE_UNIQUE_EMAIL_CLIENT" 
BEFORE INSERT OR UPDATE OF EMAIL ON KLIENCI
FOR EACH ROW
BEGIN
    IF :OLD.EMAIL IS NOT NULL AND :NEW.EMAIL = :OLD.EMAIL THEN
        RETURN;
    END IF;

    IF :NEW.EMAIL IS NOT NULL THEN
        IF NOT KLIENT_FUNCTIONS.IS_EMAIL_UNIQUE_CLIENT(:NEW.EMAIL, :NEW.ID_KLIENTA) THEN
            RAISE_APPLICATION_ERROR(-20001, 'Adres e-mail jest ju? u?ywany przez innego klienta.');
        END IF;
    END IF;
END;
/
ALTER TRIGGER "SILOWNIA"."VALIDATE_UNIQUE_EMAIL_CLIENT" ENABLE;
--------------------------------------------------------
--  DDL for Trigger VALIDATE_UNIQUE_EMAIL_TRAINER
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE TRIGGER "SILOWNIA"."VALIDATE_UNIQUE_EMAIL_TRAINER" 
BEFORE INSERT OR UPDATE OF EMAIL ON TRENERZY
FOR EACH ROW
BEGIN
    IF :OLD.EMAIL IS NOT NULL AND :NEW.EMAIL = :OLD.EMAIL THEN
        RETURN;
    END IF;

    IF :NEW.EMAIL IS NOT NULL THEN
        IF NOT TRAINER_FUNCTIONS.IS_EMAIL_UNIQUE_TRAINER(:NEW.EMAIL, :NEW.ID_TRENERA) THEN
            RAISE_APPLICATION_ERROR(-20001, 'Adres e-mail jest juz uzywany przez innego trenera.');
        END IF;
    END IF;
END;
/
ALTER TRIGGER "SILOWNIA"."VALIDATE_UNIQUE_EMAIL_TRAINER" ENABLE;

--------------------------------------------------------
--  Constraints for Table KARNETY
--------------------------------------------------------

  ALTER TABLE "SILOWNIA"."KARNETY" MODIFY ("ID_KARNETU" NOT NULL ENABLE);
  ALTER TABLE "SILOWNIA"."KARNETY" ADD PRIMARY KEY ("ID_KARNETU")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
--------------------------------------------------------
--  Constraints for Table TRENERZY
--------------------------------------------------------

  ALTER TABLE "SILOWNIA"."TRENERZY" MODIFY ("ID_TRENERA" NOT NULL ENABLE);
  ALTER TABLE "SILOWNIA"."TRENERZY" ADD PRIMARY KEY ("ID_TRENERA")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
--------------------------------------------------------
--  Constraints for Table SILOWNIE
--------------------------------------------------------

  ALTER TABLE "SILOWNIA"."SILOWNIE" MODIFY ("ID_SILOWNI" NOT NULL ENABLE);
  ALTER TABLE "SILOWNIA"."SILOWNIE" ADD PRIMARY KEY ("ID_SILOWNI")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
--------------------------------------------------------
--  Constraints for Table ZAJECIA
--------------------------------------------------------

  ALTER TABLE "SILOWNIA"."ZAJECIA" MODIFY ("ID_ZAJEC" NOT NULL ENABLE);
  ALTER TABLE "SILOWNIA"."ZAJECIA" ADD PRIMARY KEY ("ID_ZAJEC")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
--------------------------------------------------------
--  Constraints for Table PROWADZENIE
--------------------------------------------------------

  ALTER TABLE "SILOWNIA"."PROWADZENIE" MODIFY ("ID_PROWADZENIA" NOT NULL ENABLE);
  ALTER TABLE "SILOWNIA"."PROWADZENIE" MODIFY ("ID_TRENERA" NOT NULL ENABLE);
  ALTER TABLE "SILOWNIA"."PROWADZENIE" MODIFY ("ID_ZAJEC" NOT NULL ENABLE);
  ALTER TABLE "SILOWNIA"."PROWADZENIE" MODIFY ("ID_SILOWNI" NOT NULL ENABLE);
  ALTER TABLE "SILOWNIA"."PROWADZENIE" ADD PRIMARY KEY ("ID_PROWADZENIA")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
--------------------------------------------------------
--  Constraints for Table KLIENCI
--------------------------------------------------------

  ALTER TABLE "SILOWNIA"."KLIENCI" MODIFY ("ID_KLIENTA" NOT NULL ENABLE);
  ALTER TABLE "SILOWNIA"."KLIENCI" ADD PRIMARY KEY ("ID_KLIENTA")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
--------------------------------------------------------
--  Constraints for Table POMIARY_SKLADU_CIALA
--------------------------------------------------------

  ALTER TABLE "SILOWNIA"."POMIARY_SKLADU_CIALA" MODIFY ("ID_POMIARU" NOT NULL ENABLE);
  ALTER TABLE "SILOWNIA"."POMIARY_SKLADU_CIALA" ADD PRIMARY KEY ("ID_POMIARU")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
--------------------------------------------------------
--  Constraints for Table OPINIE
--------------------------------------------------------

  ALTER TABLE "SILOWNIA"."OPINIE" MODIFY ("ID_OPINII" NOT NULL ENABLE);
  ALTER TABLE "SILOWNIA"."OPINIE" ADD PRIMARY KEY ("ID_OPINII")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
--------------------------------------------------------
--  Constraints for Table UCZESTNICTWO
--------------------------------------------------------

  ALTER TABLE "SILOWNIA"."UCZESTNICTWO" MODIFY ("ID_UCZESTNICTWO" NOT NULL ENABLE);
  ALTER TABLE "SILOWNIA"."UCZESTNICTWO" MODIFY ("ID_KLIENTA" NOT NULL ENABLE);
  ALTER TABLE "SILOWNIA"."UCZESTNICTWO" MODIFY ("ID_PROWADZENIA" NOT NULL ENABLE);
  ALTER TABLE "SILOWNIA"."UCZESTNICTWO" ADD PRIMARY KEY ("ID_UCZESTNICTWO")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table KLIENCI
--------------------------------------------------------

  ALTER TABLE "SILOWNIA"."KLIENCI" ADD FOREIGN KEY ("KARNET_ID")
	  REFERENCES "SILOWNIA"."KARNETY" ("ID_KARNETU") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table OPINIE
--------------------------------------------------------

  ALTER TABLE "SILOWNIA"."OPINIE" ADD CONSTRAINT "FK_OPINIE_UCZESTNICTWO" FOREIGN KEY ("ID_UCZESTNICTWO")
	  REFERENCES "SILOWNIA"."UCZESTNICTWO" ("ID_UCZESTNICTWO") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table POMIARY_SKLADU_CIALA
--------------------------------------------------------

  ALTER TABLE "SILOWNIA"."POMIARY_SKLADU_CIALA" ADD FOREIGN KEY ("ID_KLIENTA")
	  REFERENCES "SILOWNIA"."KLIENCI" ("ID_KLIENTA") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table PROWADZENIE
--------------------------------------------------------

  ALTER TABLE "SILOWNIA"."PROWADZENIE" ADD FOREIGN KEY ("ID_TRENERA")
	  REFERENCES "SILOWNIA"."TRENERZY" ("ID_TRENERA") ENABLE;
  ALTER TABLE "SILOWNIA"."PROWADZENIE" ADD FOREIGN KEY ("ID_ZAJEC")
	  REFERENCES "SILOWNIA"."ZAJECIA" ("ID_ZAJEC") ENABLE;
  ALTER TABLE "SILOWNIA"."PROWADZENIE" ADD FOREIGN KEY ("ID_SILOWNI")
	  REFERENCES "SILOWNIA"."SILOWNIE" ("ID_SILOWNI") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table UCZESTNICTWO
--------------------------------------------------------

  ALTER TABLE "SILOWNIA"."UCZESTNICTWO" ADD FOREIGN KEY ("ID_KLIENTA")
	  REFERENCES "SILOWNIA"."KLIENCI" ("ID_KLIENTA") ENABLE;
  ALTER TABLE "SILOWNIA"."UCZESTNICTWO" ADD FOREIGN KEY ("ID_PROWADZENIA")
	  REFERENCES "SILOWNIA"."PROWADZENIE" ("ID_PROWADZENIA") ENABLE;
